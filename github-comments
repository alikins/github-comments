#!/usr/bin/python

from hashlib import md5
import json
import re
import sys

from BeautifulSoup import BeautifulSoup
import markdown
import requests


# clearly not the most rebust arg handling yet
try:
    user = sys.argv[1]
    repo = sys.argv[2]
    pull_request = sys.argv[3]
except Exception:
    print "usage: github-comments repo_name pr_number"
    raise

# set errorformat='%f:%l:%m,%E%f:%l:%m,%-Z%^%$


# from from https://gist.github.com/gasman/856894
# bundle here for convience
def gfm(text):
    # Extract pre blocks.
    extractions = {}
    def pre_extraction_callback(matchobj):
        digest = md5(matchobj.group(0)).hexdigest()
        extractions[digest] = matchobj.group(0)
        return "{gfm-extraction-%s}" % digest
    pattern = re.compile(r'<pre>.*?</pre>', re.MULTILINE | re.DOTALL)
    text = re.sub(pattern, pre_extraction_callback, text)

    # Prevent foo_bar_baz from ending up with an italic word in the middle.
    def italic_callback(matchobj):
        s = matchobj.group(0)
        if list(s).count('_') >= 2:
            return s.replace('_', '\_')
        return s
    pattern = re.compile(r'^(?! {4}|\t)\w+(?<!_)_\w+_\w[\w_]*', re.MULTILINE | re.UNICODE)
    text = re.sub(pattern, italic_callback, text)

    # In very clear cases, let newlines become <br /> tags.
    def newline_callback(matchobj):
        if len(matchobj.group(1)) == 1:
            return matchobj.group(0).rstrip() + '  \n'
        else:
            return matchobj.group(0)
    pattern = re.compile(r'^[\w\<][^\n]*(\n+)', re.MULTILINE | re.UNICODE)
    text = re.sub(pattern, newline_callback, text)

    # Insert pre block extractions.
    def pre_insert_callback(matchobj):
        return '\n\n' + extractions[matchobj.group(1)]
    text = re.sub(r'{gfm-extraction-([0-9a-f]{32})\}', pre_insert_callback, text)

    return text


# github pull request comments api
r = requests.get("https://api.github.com/repos/%s/%s/pulls/%s/comments" % (user, repo, pull_request))
comments = json.loads(r.text or r.content)

for comment in comments:
    body_text_gfm = comment['body']
    body_text_md = gfm(body_text_gfm)
    body_text_html = markdown.markdown(body_text_md)
    body_text_lines = (BeautifulSoup(body_text_html).findAll(text=True))

    body_text = "\n".join(body_text_lines)

    print "%s:%s:%s: %s" % (comment['path'], comment['position'], comment['user']['login'],
                            body_text)


